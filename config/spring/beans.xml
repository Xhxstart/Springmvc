<?xml version="1.0" encoding="UTF-8"?>
 <beans xmlns="http://www.springframework.org/schema/beans"
 	 xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:context="http://www.springframework.org/schema/context"
     xmlns:util="http://www.springframework.org/schema/util"   
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	
	
	 <!-- 引入配置属性文件 -->	
      <context:property-placeholder location="classpath:db2.properties"></context:property-placeholder>
      <!-- 应用数据源 -->
      <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"       
        destroy-method="close">  
               
       	<property name="driverClassName" value="${jdbc.driverClass}" />
       	<property name="url" value="${jdbc.jdbcUrl}" /> 
       	<property name="username" value="${jdbc.username}" />      
        <property name="password" value="${jdbc.password}" /> 
        <property name="maxTotal" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWaitMillis" value="500" /> 
	  </bean> 
      <!-- 配置sqlSessionFactory -->
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<!--加载mybatis配置文件 -->
      		<property name="configLocation" value="mybatis/SqlMapConfig.xml"></property>
      		<!-- 数据源 -->
      		<property name="dataSource" ref="dataSource"></property>
      </bean>
      <bean id="UserValidator" class="com.xhx.validator.UserValidator">     	
     </bean>
     <!-- 配置dao接口 -->
     <bean id="UserDao" class="com.xhx.ssm.dao.UserDaoImpl">
     	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
     </bean>
     
     <!-- 配置mapper 通过MapperFactoryBean创建	sqlSessionFactory-->
     <!--<bean id="UserMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
      	既然你是一个接口，就要指定实现哪一个接口 
     	<property name="mapperInterface" value="com.xhx.mapper.UserMapper"></property>     
     	<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
     </bean>
     -->
     
     <!-- mapper批量扫描，从mapper包中扫描出mapper接口，自动创建对象并且在spring容器中注册
     	遵循的规范：将mapper。java和mapper。xml映射文件名保持一致，且在同一个目录中
     	自动扫秒的	mapper对象的bean的id为mapper类名（首字母小写）         
      -->
      <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	<property name="basePackage" value="com.xhx.mapper"></property>
      	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
      </bean>

</beans>